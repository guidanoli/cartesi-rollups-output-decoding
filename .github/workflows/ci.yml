on:
    pull_request:
    push:
        branches:
            - main
        tags:
            - "v*"

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v3
              with:
                  version: 8

            - uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: "pnpm"

            - name: Install Node packages
              run: pnpm i

            - name: Check code format
              run: pnpm check-format

            - name: Run tests
              run: pnpm test

    push:
        if: ${{ github.event_name != 'pull_request' }}
        needs: test
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
        env:
            IMAGE_NAME: cmioc
        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              id: setup_buildx
              uses: docker/setup-buildx-action@v3

            - name: Extract metadata from Git refs and GitHub events
              id: extract_metadata
              uses: docker/metadata-action@v5
              with:
                  images: |
                      ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=semver,pattern={{version}}
                      type=ref,event=branch

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build machine image and push it to GitHub Container Registry
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  builder: ${{ steps.setup_buildx.outputs.name }}
                  tags: ${{ steps.extract_metadata.outputs.tags }}
                  labels: ${{ steps.extract_metadata.lables.labels }}
                  cache-from: type=gha,scope=ubuntu
                  cache-to: type=gha,mode=max,scope=ubuntu
