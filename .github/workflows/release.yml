name: Release

on:
    push:
        branches:
            - main

jobs:
    nodejs:
        name: Node.js
        runs-on: ubuntu-latest

        outputs:
            published: ${{ steps.changeset.outputs.published }}
            publishedPackages: ${{ steps.changeset.outputs.publishedPackages }}

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"

            - name: Install Node.js dependencies
              run: pnpm install

            - name: Create PR or publish packages
              id: changeset
              uses: changesets/action@v1
              with:
                  publish: pnpm changeset publish
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    ghcr:
        name: GitHub Container Registry
        runs-on: ubuntu-latest
        needs: nodejs

        strategy:
            matrix:
                package: ${{ fromJson(needs.nodejs.outputs.publishedPackages) }}

        if: ${{ needs.nodejs.outputs.published == 'true' }}

        permissions:
            packages: write
            contents: read

        env:
            IMAGE_NAME: ""

        steps:
            - name: Set CLI image name
              if: ${{ matrix.package.name == '@guidanoli/cmioc-cli' }}
              run: echo "IMAGE_NAME=cmioc" >> $GITHUB_ENV

            - uses: actions/checkout@v4
              if: ${{ env.IMAGE_NAME != '' }}

            - name: Set up Docker Buildx
              if: ${{ env.IMAGE_NAME != '' }}
              id: setup_buildx
              uses: docker/setup-buildx-action@v3

            - name: Extract metadata from Git refs and GitHub events
              if: ${{ env.IMAGE_NAME != '' }}
              id: extract_metadata
              uses: docker/metadata-action@v5
              with:
                  images: |
                      ghcr.io/${{ repository_owner }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=semver,pattern={{version}},value=${{ matrix.package.version }}

            - name: Login to GitHub Container Registry
              if: ${{ env.IMAGE_NAME != '' }}
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build machine image and push it to GitHub Container Registry
              if: ${{ env.IMAGE_NAME != '' }}
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  platforms: linux/amd64,linux/arm64
                  builder: ${{ steps.setup_buildx.outputs.name }}
                  tags: ${{ steps.extract_metadata.outputs.tags }}
                  labels: ${{ steps.extract_metadata.lables.labels }}
                  cache-from: type=gha,scope=ubuntu
                  cache-to: type=gha,mode=max,scope=ubuntu
